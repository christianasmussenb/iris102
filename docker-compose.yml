version: '3.8'

services:
  iris:
    build: 
      context: ./iris
      dockerfile: Dockerfile
    container_name: iris102
    hostname: iris102
    environment:
      - ISC_PASSWORD=SYS
      - IN_DIR=/data/IN
      - OUT_DIR=/data/OUT
      - LOG_DIR=/data/LOG
      - MYSQL_HOST=mysql
      - MYSQL_DB=demo
      - MYSQL_USER=demo
      - MYSQL_PASSWORD=demo_pass
      - PG_HOST=${PG_HOST:-}
      - PG_DB=${PG_DB:-}
      - PG_USER=${PG_USER:-}
      - PG_PASSWORD=${PG_PASSWORD:-}
      - PG_SSLMODE=${PG_SSLMODE:-require}
    ports:
      - "1972:1972"    # SuperServer
      - "52773:52773"  # Web Server/Management Portal
    volumes:
      - ./data:/data
      - ./iris/src:/opt/irisapp/src
      - iris-data:/usr/irissys/mgr
    depends_on:
      - mysql
    restart: unless-stopped

  mysql:
    image: mysql:8.0
    container_name: iris102-mysql
    hostname: mysql
    environment:
      MYSQL_ROOT_PASSWORD: root_pass
      MYSQL_DATABASE: demo
      MYSQL_USER: demo
      MYSQL_PASSWORD: demo_pass
    ports:
      - "3306:3306"
    volumes:
      - ./sql/mysql_init.sql:/docker-entrypoint-initdb.d/01-init.sql
      - mysql-data:/var/lib/mysql
    restart: unless-stopped

  adminer:
    image: adminer:4
    container_name: iris102-adminer
    ports:
      - "8080:8080"
    depends_on:
      - mysql
    restart: unless-stopped

  # PostgreSQL local (solo para pruebas - comentar si usas externo)
  postgres:
    image: postgres:15
    container_name: iris102-postgres
    hostname: postgres
    environment:
      POSTGRES_DB: demo
      POSTGRES_USER: demo
      POSTGRES_PASSWORD: demo_pass
    ports:
      - "5432:5432"
    volumes:
      - ./sql/postgres_init.sql:/docker-entrypoint-initdb.d/01-init.sql
      - postgres-data:/var/lib/postgresql/data
    restart: unless-stopped
    profiles:
      - local-testing  # Para activar: docker-compose --profile local-testing up

volumes:
  iris-data:
  mysql-data:
  postgres-data: